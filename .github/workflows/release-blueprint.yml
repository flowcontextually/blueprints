name: Release Blueprint Package

on:
  push:
    tags:
      - "*-*-v*"

jobs:
  build-and-release:
    name: Build and Release Blueprint
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Parse tag and set up variables
        id: vars
        shell: bash
        run: |
          TAG=${{ github.ref_name }}
          # Use cut for robust parsing. This is less fragile than complex regex.
          # It splits the string by the '-' delimiter.
          NAMESPACE=$(echo $TAG | cut -d'-' -f1)
          NAME=$(echo $TAG | cut -d'-' -f2)
          VERSION=$(echo $TAG | cut -d'-' -f3)

          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "release_name=Blueprint: ${NAMESPACE}/${NAME}@${VERSION}" >> $GITHUB_OUTPUT
          echo "blueprint_path=${NAMESPACE}/${NAME}/${VERSION}" >> $GITHUB_OUTPUT
          echo "asset_name=${NAME}.zip" >> $GITHUB_OUTPUT

      - name: Verify blueprint directory exists
        run: |
          echo "Verifying path: ${{ steps.vars.outputs.blueprint_path }}"
          if [ ! -d "${{ steps.vars.outputs.blueprint_path }}" ]; then
            echo "Error: Directory for tag does not exist."
            exit 1
          fi

      - name: Create Zip Archive of the specific blueprint
        shell: bash
        run: |
          echo "Navigating to: ${{ steps.vars.outputs.blueprint_path }}"
          cd ${{ steps.vars.outputs.blueprint_path }}

          echo "Creating zip archive named ${{ steps.vars.outputs.asset_name }} with all contents of the current directory (.*)"
          # The command `zip -r ../../../${{ steps.vars.outputs.asset_name }} .` zips all contents
          # of the current directory into an archive placed three levels up.
          zip -r ../../../${{ steps.vars.outputs.asset_name }} .
      - name: Create GitHub Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: ${{ steps.vars.outputs.release_name }}
          files: ${{ steps.vars.outputs.asset_name }}
